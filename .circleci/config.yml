# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          key: v1-dependencies-

      - run: 
          name: Install dependencies
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
        
      # build and deploy
      - run:
          name: test
          command: echo "no tests"

      - run:
          name: build
          command: npm run build    
  deploy-production:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10

    steps:
      - run:
          name: Install dependencies
          working_directory: /
          command: |
            apt-get -y -qq update
            apt-get -y -qq install python3.4-dev
            curl -O https://bootstrap.pypa.io/get-pip.py
            python3.4 get-pip.py --user
            pip install awscli --upgrade --user

      - run: 
          name: deploy to production
          command: aws s3 sync public s3://khaledgarbaya.net --delete --cache-control "max-age=3153600"

  deploy-preview:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10
    steps:
      - run:
          name: Install dependencies
          working_directory: /
          command: |
            apt-get -y -qq update
            apt-get -y -qq install python3.4-dev
            curl -O https://bootstrap.pypa.io/get-pip.py
            python3.4 get-pip.py --user
            pip install awscli --upgrade --user
      - run: 
          name: deploy ro preview
          command: aws s3 sync public s3://preview.khaledgarbaya.net --delete --cache-control "max-age=3153600"
  invalidate-cache:
    docker:
      - image: circleci/node:7.10
    steps:
      - run: 
          name: invalidation
          command: aws cloudfront create-invalidation --cli-input-json "{\"DistributionId\":\"$CLOUD_FRONT_INSTANCE\",\"InvalidationBatch\":{\"Paths\":{\"Quantity\":1,\"Items\":[\"/*\"]},\"CallerReference\":\"$(date +%s)\"}}"
workflows:
  version: 2
  build-deploy-production:
    jobs:
      - build
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only: master
  build-deploy-preview:
    jobs:
      - build
      - deploy-preview:
          requires:
            - build
          filters:
            branches:
              ignore: master
